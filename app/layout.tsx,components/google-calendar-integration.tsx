\`\`\`tsx
// app/layout.tsx
import type { Metadata } from "next"
import { Inter } from "next/font/google"
import "./globals.css"
import { Toaster } from "sonner"
import { Providers } from "@/components/providers"

const inter = Inter({ subsets: ["latin"] })

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
}

export default function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {
  return (
    <html lang="en" data-theme="dark">
      <body>
        <Providers>
          {children}
          <Toaster />
        </Providers>
      </body>
    </html>
  )
}
\`\`\`

\`\`\`tsx
// components/google-calendar-integration.tsx
"use client"

import type React from "react"

import { useEffect, useState } from "react"

const GoogleCalendarIntegration = () => {
  const [events, setEvents] = useState([])

  useEffect(() => {
    // Replace with your actual Google Calendar API logic
    const fetchEvents = async () => {
      try {
        // Simulate fetching events from Google Calendar API
        const mockEvents = [
          { id: "1", summary: "Meeting with John", start: { dateTime: "2024-01-22T10:00:00-08:00" } },
          { id: "2", summary: "Lunch with Sarah", start: { dateTime: "2024-01-23T12:00:00-08:00" } },
        ]
        setEvents(mockEvents)
      } catch (error) {
        console.error("Error fetching events:", error)
      }
    }

    fetchEvents()
  }, [])

  return (
    <div>
      <h2>Google Calendar Events</h2>
      <ul>
        {events.map((event) => (
          <li key={event.id}>
            {event.summary} - {event.start.dateTime}
          </li>
        ))}
      </ul>
    </div>
  )
}

export default GoogleCalendarIntegration;

export { default as GoogleCalendarIntegration }
\`\`\`
